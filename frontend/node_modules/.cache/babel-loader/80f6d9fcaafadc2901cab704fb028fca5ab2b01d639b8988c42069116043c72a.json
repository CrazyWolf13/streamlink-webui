{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar\"\n};\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"conditional-options\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = {\n  class: \"streams-container\"\n};\nconst _hoisted_15 = [\"href\"];\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Sidebar \"), _createElementVNode(\"aside\", _hoisted_3, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'start'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $data.currentView = 'start')\n  }, \"Start Stream\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'list'\n    }),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleRunningStreamsClick && $options.handleRunningStreamsClick(...args))\n  }, \"Running Streams\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'cleanup'\n    }),\n    onClick: _cache[2] || (_cache[2] = $event => $data.currentView = 'cleanup')\n  }, \"Cleanup\", 2 /* CLASS */)])]), _createCommentVNode(\" Main Content \"), _createElementVNode(\"main\", _hoisted_4, [_createCommentVNode(\" Start Stream \"), $data.currentView === 'start' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[20] || (_cache[20] = _createElementVNode(\"h2\", null, \"Start a Stream\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"Channel Name:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.startData.name = $event),\n    placeholder: \"Enter Channel Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startData.name]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"Quality:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.startData.quality = $event)\n  }, _cache[14] || (_cache[14] = [_createStaticVNode(\"<option value=\\\"audio_only\\\" data-v-d2673e44>Audio Only</option><option value=\\\"best\\\" data-v-d2673e44>Best</option><option value=\\\"720p\\\" data-v-d2673e44>720p</option><option value=\\\"480p\\\" data-v-d2673e44>480p</option><option value=\\\"360p\\\" data-v-d2673e44>360p</option><option value=\\\"160p\\\" data-v-d2673e44>160p</option>\", 6)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.startData.quality]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", null, \"Filename:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.useDefaultFilename = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.useDefaultFilename]]), _cache[18] || (_cache[18] = _createTextVNode(\" Use default filename \")), !$data.useDefaultFilename ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.includeDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.includeDate]]), _cache[16] || (_cache[16] = _createTextVNode(\" Include date in filename \")), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.startData.customPath = $event),\n    placeholder: \"Enter custom filename or path\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startData.customPath]])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.startData.blockAds = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.startData.blockAds]]), _cache[19] || (_cache[19] = _createTextVNode(\" Block ads \"))]), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.startStream && $options.startStream(...args))\n  }, \"Start\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Running Streams \"), $data.currentView === 'list' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[30] || (_cache[30] = _createElementVNode(\"h2\", null, \"Running Streams\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.confirmTerminateAllStreams && $options.confirmTerminateAllStreams(...args)),\n    class: \"terminate-all-btn\"\n  }, \"Terminate All Streams\"), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.fetchRunningStreams && $options.fetchRunningStreams(...args)),\n    class: \"refresh-btn\"\n  }, \"Refresh\"), $data.streamsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \"Loading streams...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.detailedStreams, stream => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stream.stream_id,\n      class: \"stream-box\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(stream.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[21] || (_cache[21] = _createElementVNode(\"strong\", null, \"Stream ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.stream_id), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[22] || (_cache[22] = _createElementVNode(\"strong\", null, \"URL:\", -1 /* HOISTED */)), _createElementVNode(\"a\", {\n      href: stream.url,\n      target: \"_blank\"\n    }, _toDisplayString(stream.url), 9 /* TEXT, PROPS */, _hoisted_15)]), _createElementVNode(\"p\", null, [_cache[23] || (_cache[23] = _createElementVNode(\"strong\", null, \"Quality:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.quality), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[24] || (_cache[24] = _createElementVNode(\"strong\", null, \"Running Since:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatRunningTime(stream.running_since)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"strong\", null, \"Filename:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.filename), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"strong\", null, \"Output Directory:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.output_dir), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"strong\", null, \"Block Ads:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.block_ads ? \"Yes\" : \"No\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.running ? \"Running\" : \"Stopped\"), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      onClick: $event => $options.terminateStream(stream.stream_id),\n      class: \"terminate-btn\"\n    }, [...(_cache[29] || (_cache[29] = [_createElementVNode(\"i\", {\n      class: \"fa fa-trash\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" Stop \")]))], 8 /* PROPS */, _hoisted_16)]);\n  }), 128 /* KEYED_FRAGMENT */))])]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Cleanup \"), $data.currentView === 'cleanup' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_cache[31] || (_cache[31] = _createElementVNode(\"h2\", null, \"Cleanup\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.cleanup && $options.cleanup(...args))\n  }, \"Cleanup DB and Logs\")])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_normalizeClass","active","$data","currentView","onClick","_cache","$event","args","$options","handleRunningStreamsClick","_hoisted_4","_hoisted_5","_hoisted_6","startData","name","placeholder","_hoisted_7","quality","_createStaticVNode","_hoisted_8","type","useDefaultFilename","_createTextVNode","_hoisted_9","includeDate","customPath","_hoisted_10","blockAds","startStream","_hoisted_11","confirmTerminateAllStreams","fetchRunningStreams","streamsLoading","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","detailedStreams","stream","stream_id","_toDisplayString","href","url","target","_hoisted_15","formatRunningTime","running_since","filename","output_dir","block_ads","running","terminateStream","_hoisted_16","_hoisted_17","cleanup"],"sources":["G:\\Informatik\\Projekte\\streamlink_web-ui\\frontend\\src\\components\\StreamlinkUi.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <div class=\"container\">\r\n        <!-- Sidebar -->\r\n        <aside class=\"sidebar\">\r\n          <ul>\r\n            <li :class=\"{ active: currentView === 'start' }\" @click=\"currentView = 'start'\">Start Stream</li>\r\n            <li :class=\"{ active: currentView === 'list' }\" @click=\"handleRunningStreamsClick\">Running Streams</li>\r\n            <li :class=\"{ active: currentView === 'cleanup' }\" @click=\"currentView = 'cleanup'\">Cleanup</li>\r\n          </ul>\r\n        </aside>\r\n  \r\n        <!-- Main Content -->\r\n        <main class=\"content\">\r\n          <!-- Start Stream -->\r\n          <div v-if=\"currentView === 'start'\">\r\n            <h2>Start a Stream</h2>\r\n            <div class=\"form-group\">\r\n              <label>Channel Name:</label>\r\n              <input v-model=\"startData.name\" placeholder=\"Enter Channel Name\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Quality:</label>\r\n              <select v-model=\"startData.quality\">\r\n                <option value=\"audio_only\">Audio Only</option>\r\n                <option value=\"best\">Best</option>\r\n                <option value=\"720p\">720p</option>\r\n                <option value=\"480p\">480p</option>\r\n                <option value=\"360p\">360p</option>\r\n                <option value=\"160p\">160p</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Filename:</label>\r\n              <input type=\"checkbox\" v-model=\"useDefaultFilename\" />\r\n              Use default filename\r\n              <div v-if=\"!useDefaultFilename\" class=\"conditional-options\">\r\n                <input type=\"checkbox\" v-model=\"includeDate\" />\r\n                Include date in filename\r\n                <input v-model=\"startData.customPath\" placeholder=\"Enter custom filename or path\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input type=\"checkbox\" v-model=\"startData.blockAds\" />\r\n              Block ads\r\n            </div>\r\n            <button @click=\"startStream\">Start</button>\r\n          </div>\r\n  \r\n          <!-- Running Streams -->\r\n          <div v-if=\"currentView === 'list'\">\r\n            <h2>Running Streams</h2>\r\n            <button @click=\"confirmTerminateAllStreams\" class=\"terminate-all-btn\">Terminate All Streams</button>\r\n            <button @click=\"fetchRunningStreams\" class=\"refresh-btn\">Refresh</button>\r\n            <div v-if=\"streamsLoading\">Loading streams...</div>\r\n            <div v-else>\r\n              <div class=\"streams-container\">\r\n                <div v-for=\"stream in detailedStreams\" :key=\"stream.stream_id\" class=\"stream-box\">\r\n                  <h3>{{ stream.name }}</h3>\r\n                  <p><strong>Stream ID:</strong> {{ stream.stream_id }}</p>\r\n                  <p>\r\n                    <strong>URL:</strong>\r\n                    <a :href=\"stream.url\" target=\"_blank\">{{ stream.url }}</a>\r\n                  </p>\r\n                  <p><strong>Quality:</strong> {{ stream.quality }}</p>\r\n                  <p><strong>Running Since:</strong> {{ formatRunningTime(stream.running_since) }}</p>\r\n                  <p><strong>Filename:</strong> {{ stream.filename }}</p>\r\n                  <p><strong>Output Directory:</strong> {{ stream.output_dir }}</p>\r\n                  <p><strong>Block Ads:</strong> {{ stream.block_ads ? \"Yes\" : \"No\" }}</p>\r\n                  <p><strong>Status:</strong> {{ stream.running ? \"Running\" : \"Stopped\" }}</p>\r\n                  <button @click=\"terminateStream(stream.stream_id)\" class=\"terminate-btn\">\r\n                    <i class=\"fa fa-trash\"></i> Stop\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Cleanup -->\r\n          <div v-if=\"currentView === 'cleanup'\">\r\n            <h2>Cleanup</h2>\r\n            <button @click=\"cleanup\">Cleanup DB and Logs</button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        currentView: \"start\", // Default view\r\n        startData: {\r\n          name: \"\",\r\n          quality: \"audio_only\",\r\n          customPath: \"\",\r\n          blockAds: false,\r\n        },\r\n        useDefaultFilename: true,\r\n        includeDate: false,\r\n        runningStreams: [], // Raw stream IDs from /api/stream_list\r\n        detailedStreams: [], // Detailed data from /api/stream_info\r\n        streamsLoading: false, // Loading state for the Running Streams view\r\n      };\r\n    },\r\n    methods: {\r\n      async startStream() {\r\n        const payload = {\r\n          ...this.startData,\r\n          customPath: this.useDefaultFilename\r\n            ? null\r\n            : this.includeDate\r\n            ? `${this.startData.customPath}_DATE`\r\n            : this.startData.customPath,\r\n        };\r\n        try {\r\n          const response = await axios.post(\"/api/start\", payload);\r\n          alert(`Stream started: ${response.data.message}`);\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert(\"Failed to start the stream.\");\r\n        }\r\n      },\r\n      async terminateStream(stream_id) {\r\n        const confirmation = window.confirm(\"Are you sure you want to terminate this stream?\");\r\n        if (confirmation) {\r\n          try {\r\n            const response = await axios.post(`/api/stop?stream_id=${stream_id}`);\r\n            alert(`Stream terminated: ${response.data.message}`);\r\n            this.fetchRunningStreams(); // Refresh the list after termination\r\n          } catch (error) {\r\n            console.error(error);\r\n            alert(\"Failed to terminate the stream.\");\r\n          }\r\n        }\r\n      },\r\n      async confirmTerminateAllStreams() {\r\n        const confirmation = window.confirm(\"Are you sure you want to terminate all streams?\");\r\n        if (confirmation) {\r\n          this.terminateAllStreams();\r\n        }\r\n      },\r\n      async terminateAllStreams() {\r\n        try {\r\n          const response = await axios.post(\"/api/stop_all\");\r\n          alert(`All streams terminated: ${response.data.message}`);\r\n          this.fetchRunningStreams(); // Refresh the list after termination\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert(\"Failed to terminate all streams.\");\r\n        }\r\n      },\r\n      async fetchRunningStreams() {\r\n        this.streamsLoading = true; // Show loading state\r\n        try {\r\n          // Fetch the list of running streams\r\n          const listResponse = await axios.get(\"/api/stream_list\");\r\n          const streamIds = listResponse.data.running_streams;\r\n  \r\n          // Fetch details for each stream ID\r\n          const detailsPromises = streamIds.map((id) =>\r\n            axios.get(`/api/stream_info?stream_id=${id}`)\r\n          );\r\n  \r\n          const detailsResponses = await Promise.all(detailsPromises);\r\n  \r\n          // Extract detailed stream information\r\n          this.detailedStreams = detailsResponses.map((res) => res.data);\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert(\"Failed to fetch running streams.\");\r\n        } finally {\r\n          this.streamsLoading = false; // Hide loading state\r\n        }\r\n      },\r\n        handleRunningStreamsClick() {\r\n        this.currentView = 'list';\r\n        this.fetchRunningStreams();\r\n        },\r\n      async cleanup() {\r\n        try {\r\n          const response = await axios.get(\"/api/cleanup\");\r\n          alert(response.data.result);\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert(\"Cleanup failed.\");\r\n        }\r\n      },\r\n      formatRunningTime(minutes) {\r\n        const totalSeconds = minutes * 60;\r\n        const wholeMinutes = Math.floor(totalSeconds / 60);\r\n        const remainingSeconds = Math.round(totalSeconds % 60);\r\n        return `${wholeMinutes}m ${remainingSeconds}s`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Colors */\r\n  :root {\r\n    --twitch-purple: #9146ff;\r\n    --dark-grey: #2d2d2d;\r\n    --light-grey: #393939;\r\n    --white: #ffffff;\r\n    --hover-grey: #4d4d4d;\r\n  }\r\n  \r\n  /* Overall Layout */\r\n  .container {\r\n    display: flex;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .sidebar {\r\n    background-color: var(--dark-grey);\r\n    color: var(--white);\r\n    padding: 15px;\r\n    width: 200px;\r\n  }\r\n  \r\n  .sidebar ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .sidebar li {\r\n    cursor: pointer;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .sidebar li:hover {\r\n    background-color: var(--hover-grey);\r\n  }\r\n  \r\n  .sidebar li.active {\r\n    background-color: var(--twitch-purple);\r\n    color: var(--white);\r\n  }\r\n  \r\n  .content {\r\n    background-color: var(--light-grey);\r\n    color: var(--white);\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  /* Form Styles */\r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  input,\r\n  select {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin-top: 5px;\r\n    background-color: #333;\r\n    border: none;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  /* Stream Boxes */\r\n  .stream-box {\r\n    background-color: var(--dark-grey);\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n  \r\n  .stream-box h3 {\r\n    margin-top: 0;\r\n  }\r\n  \r\n  .stream-box p {\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .streams-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(600px, 1fr));\r\n    gap: 20px;\r\n  }\r\n  \r\n  button {\r\n    width: auto;\r\n    padding: 8px 16px;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  button i {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  /* Action Buttons */\r\n  .refresh-btn,\r\n  .terminate-all-btn {\r\n    background-color: var(--twitch-purple);\r\n    color: var(--white);\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .refresh-btn:hover,\r\n  .terminate-all-btn:hover {\r\n    background-color: #772ce8;\r\n  }\r\n  \r\n  .terminate-btn {\r\n    background-color: transparent;\r\n    color: #d9534f;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    margin-left: auto;\r\n    transition: color 0.3s ease;\r\n  }\r\n  \r\n  .terminate-btn:hover {\r\n    color: #c9302c;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}