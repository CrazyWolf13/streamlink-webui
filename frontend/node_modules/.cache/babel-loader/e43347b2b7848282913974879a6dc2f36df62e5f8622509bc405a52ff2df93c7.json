{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Enter Twitch username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getAvatar && $options.getAvatar(...args))\n  }, \"Get Avatar\"), $data.profileImageUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $data.profileImageUrl,\n    alt: \"Profile Avatar\"\n  }, null, 8 /* PROPS */, _hoisted_2)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_cache","$event","$data","username","placeholder","onClick","args","$options","getAvatar","profileImageUrl","_hoisted_1","src","alt","_hoisted_2","_createCommentVNode"],"sources":["G:\\Informatik\\Projekte\\streamlink_web-ui\\frontend\\src\\components\\TwitchAvatar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input v-model=\"username\" placeholder=\"Enter Twitch username\" />\r\n      <button @click=\"getAvatar\">Get Avatar</button>\r\n      <div v-if=\"profileImageUrl\">\r\n        <img :src=\"profileImageUrl\" alt=\"Profile Avatar\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        profileImageUrl: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async getAvatar() {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/get_avatar?username=${this.username}`);\r\n          this.profileImageUrl = response.data.profile_image_url;\r\n        } catch (error) {\r\n          console.error('Error fetching avatar:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  input {\r\n    margin-right: 10px;\r\n  }\r\n  img {\r\n    margin-top: 10px;\r\n    max-width: 100px;\r\n    border-radius: 50%;\r\n  }\r\n  </style>"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;;uBACIC,mBAAA,CAMM,c,gBALJC,mBAAA,CAAgE;IAFtE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEsBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,GACxBJ,mBAAA,CAA8C;IAArCM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,GAC1BJ,KAAA,CAAAO,eAAe,I,cAA1BX,mBAAA,CAEM,OANZY,UAAA,GAKQX,mBAAA,CAAmD;IAA7CY,GAAG,EAAET,KAAA,CAAAO,eAAe;IAAEG,GAAG,EAAC;0BALxCC,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}