{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar\"\n};\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"form-group channel-name-container\"\n};\nconst _hoisted_7 = {\n  class: \"channel-input-avatar\"\n};\nconst _hoisted_8 = {\n  class: \"avatar-container\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  class: \"streams-container\"\n};\nconst _hoisted_20 = {\n  class: \"stream-info\"\n};\nconst _hoisted_21 = [\"href\"];\nconst _hoisted_22 = {\n  class: \"profile-image-container\"\n};\nconst _hoisted_23 = [\"href\"];\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = {\n  class: \"stream-info\"\n};\nconst _hoisted_27 = [\"href\"];\nconst _hoisted_28 = {\n  class: \"profile-image-container\"\n};\nconst _hoisted_29 = [\"href\"];\nconst _hoisted_30 = [\"src\"];\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StyledButton = _resolveComponent(\"StyledButton\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Sidebar \"), _createElementVNode(\"aside\", _hoisted_3, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'start'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $data.currentView = 'start')\n  }, \"Start Stream\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'list'\n    }),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleRunningStreamsClick && $options.handleRunningStreamsClick(...args))\n  }, \"Running Streams\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      active: $data.currentView === 'cleanup'\n    }),\n    onClick: _cache[2] || (_cache[2] = $event => $data.currentView = 'cleanup')\n  }, \"Cleanup\", 2 /* CLASS */)])]), _createCommentVNode(\" Main Content \"), _createElementVNode(\"main\", _hoisted_4, [_createCommentVNode(\" Start Stream \"), $data.currentView === 'start' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[19] || (_cache[19] = _createElementVNode(\"h2\", null, \"Start a Stream\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", null, \"Channel Name:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.startData.name = $event),\n    placeholder: \"Enter Channel Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startData.name]]), _createVNode(_component_StyledButton, {\n    clickHandler: $options.fetchLiveStatus,\n    class: \"small-button\"\n  }, {\n    default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"Check Live Status\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"clickHandler\"]), _createElementVNode(\"div\", _hoisted_8, [!$data.avatarUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createCommentVNode(\" Embedded SVG as fallback when no avatar is loaded \"), _cache[10] || (_cache[10] = _createElementVNode(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    fill: \"#4d4d4d\"\n  })], -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createCommentVNode(\" Show the profile image when available \"), _createElementVNode(\"img\", {\n    src: $data.avatarUrl,\n    alt: \"Profile Image\",\n    class: \"profile-image-small\"\n  }, null, 8 /* PROPS */, _hoisted_11), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"status-indicator\", {\n      'status-online': $data.isUserLive,\n      'status-offline': !$data.isUserLive\n    }])\n  }, null, 2 /* CLASS */)]))])]), _createElementVNode(\"div\", _hoisted_12, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"Quality:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.startData.quality = $event)\n  }, _cache[11] || (_cache[11] = [_createStaticVNode(\"<option value=\\\"audio_only\\\" data-v-d2673e44>Audio Only</option><option value=\\\"best\\\" data-v-d2673e44>Best</option><option value=\\\"720p\\\" data-v-d2673e44>720p</option><option value=\\\"480p\\\" data-v-d2673e44>480p</option><option value=\\\"360p\\\" data-v-d2673e44>360p</option><option value=\\\"160p\\\" data-v-d2673e44>160p</option>\", 6)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.startData.quality]])]), _createElementVNode(\"div\", _hoisted_13, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"Filename:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.startData.append_time = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.startData.append_time]]), _cache[14] || (_cache[14] = _createTextVNode(\" Append datetime to filename \"))]), _createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.startData.block_ads = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.startData.block_ads]]), _cache[15] || (_cache[15] = _createTextVNode(\" Block ads \"))]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.startData.schedule = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.startData.schedule]]), _cache[16] || (_cache[16] = _createTextVNode(\" Schedule \"))]), _createVNode(_component_StyledButton, {\n    clickHandler: $options.startStream\n  }, {\n    default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"Start\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"clickHandler\"])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Running Streams \"), $data.currentView === 'list' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[40] || (_cache[40] = _createElementVNode(\"h2\", null, \"Running Streams\", -1 /* HOISTED */)), _createVNode(_component_StyledButton, {\n    clickHandler: $options.fetchRunningStreams,\n    class: \"refresh-btn\"\n  }, {\n    default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"Refresh\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"clickHandler\"]), $data.streamsLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"Loading streams...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.detailedStreams, stream => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stream.stream_id,\n      class: \"stream-box\"\n    }, [_cache[29] || (_cache[29] = _createElementVNode(\"div\", {\n      class: \"scheduled-icon-container invisible\"\n    }, [_createElementVNode(\"i\", {\n      class: \"fas fa-hourglass-half scheduled-icon\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"h3\", null, [_createElementVNode(\"a\", {\n      href: stream.url,\n      target: \"_blank\"\n    }, _toDisplayString(stream.name), 9 /* TEXT, PROPS */, _hoisted_21)]), _createElementVNode(\"p\", null, [_cache[21] || (_cache[21] = _createElementVNode(\"strong\", null, \"Stream ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.stream_id), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[22] || (_cache[22] = _createElementVNode(\"strong\", null, \"Quality:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.quality), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[23] || (_cache[23] = _createElementVNode(\"strong\", null, \"Running Since:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatRunningTime(stream.running_since)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[24] || (_cache[24] = _createElementVNode(\"strong\", null, \"Filename:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.filename), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"strong\", null, \"Output Directory:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.output_dir), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"strong\", null, \"Block Ads:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.block_ads ? \"Yes\" : \"No\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.running ? \"Running\" : \"Stopped\"), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"a\", {\n      href: stream.url,\n      target: \"_blank\"\n    }, [_createElementVNode(\"img\", {\n      src: stream.profile_image_url,\n      alt: \"Profile Image\",\n      class: \"profile-image\"\n    }, null, 8 /* PROPS */, _hoisted_24)], 8 /* PROPS */, _hoisted_23)]), _createElementVNode(\"button\", {\n      onClick: $event => $options.terminateStream(stream.stream_id),\n      class: \"terminate-btn\",\n      title: \"Terminate\"\n    }, [...(_cache[28] || (_cache[28] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_25)]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scheduledStreams, stream => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stream.stream_id,\n      class: \"stream-box\"\n    }, [_cache[38] || (_cache[38] = _createElementVNode(\"div\", {\n      class: \"scheduled-icon-container\"\n    }, [_createElementVNode(\"i\", {\n      class: \"fas fa-hourglass-half scheduled-icon\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"h3\", null, [_createElementVNode(\"a\", {\n      href: stream.url,\n      target: \"_blank\"\n    }, _toDisplayString(stream.name), 9 /* TEXT, PROPS */, _hoisted_27)]), _createElementVNode(\"p\", null, [_cache[30] || (_cache[30] = _createElementVNode(\"strong\", null, \"Stream ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.stream_id), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"strong\", null, \"Quality:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.quality), 1 /* TEXT */)]), _cache[36] || (_cache[36] = _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, \"Scheduled:\"), _createTextVNode(\" Yes\")], -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"strong\", null, \"Filename:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.filename), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[33] || (_cache[33] = _createElementVNode(\"strong\", null, \"Output Directory:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.output_dir), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[34] || (_cache[34] = _createElementVNode(\"strong\", null, \"Block Ads:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.block_ads ? \"Yes\" : \"No\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[35] || (_cache[35] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(stream.running ? \"Running\" : \"Stopped\"), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"a\", {\n      href: stream.url,\n      target: \"_blank\"\n    }, [_createElementVNode(\"img\", {\n      src: stream.profile_image_url,\n      alt: \"Profile Image\",\n      class: \"profile-image\"\n    }, null, 8 /* PROPS */, _hoisted_30)], 8 /* PROPS */, _hoisted_29)]), _createElementVNode(\"button\", {\n      onClick: $event => $options.terminateStream(stream.stream_id),\n      class: \"terminate-btn\",\n      title: \"Terminate\"\n    }, [...(_cache[37] || (_cache[37] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_31)]);\n  }), 128 /* KEYED_FRAGMENT */))])])), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.confirmTerminateAllStreams && $options.confirmTerminateAllStreams(...args)),\n    class: \"terminate-all-btn\",\n    title: \"Terminate All\"\n  }, _cache[39] || (_cache[39] = [_createElementVNode(\"i\", {\n    class: \"fas fa-trash\"\n  }, null, -1 /* HOISTED */)]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Cleanup \"), $data.currentView === 'cleanup' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_cache[42] || (_cache[42] = _createElementVNode(\"h2\", null, \"Cleanup\", -1 /* HOISTED */)), _createVNode(_component_StyledButton, {\n    clickHandler: $options.cleanup\n  }, {\n    default: _withCtx(() => _cache[41] || (_cache[41] = [_createTextVNode(\"Cleanup DB and Logs\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"clickHandler\"])])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_normalizeClass","active","$data","currentView","onClick","_cache","$event","args","$options","handleRunningStreamsClick","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","startData","name","placeholder","_createVNode","_component_StyledButton","clickHandler","fetchLiveStatus","default","_withCtx","_createTextVNode","_","_hoisted_8","avatarUrl","_hoisted_9","xmlns","width","height","viewBox","cx","cy","r","fill","_hoisted_10","src","alt","_hoisted_11","isUserLive","_hoisted_12","quality","_createStaticVNode","_hoisted_13","type","append_time","_hoisted_14","block_ads","_hoisted_15","schedule","startStream","_hoisted_16","fetchRunningStreams","streamsLoading","_hoisted_17","_hoisted_18","_hoisted_19","_Fragment","_renderList","detailedStreams","stream","stream_id","_hoisted_20","href","url","target","_hoisted_21","_toDisplayString","formatRunningTime","running_since","filename","output_dir","running","_hoisted_22","profile_image_url","_hoisted_24","_hoisted_23","terminateStream","title","_hoisted_25","scheduledStreams","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_30","_hoisted_29","_hoisted_31","confirmTerminateAllStreams","_hoisted_32","cleanup"],"sources":["G:\\Informatik\\Projekte\\streamlink_web-ui\\frontend\\src\\components\\StreamlinkUi.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"container\">\r\n      <!-- Sidebar -->\r\n      <aside class=\"sidebar\">\r\n        <ul>\r\n          <li :class=\"{ active: currentView === 'start' }\" @click=\"currentView = 'start'\">Start Stream</li>\r\n          <li :class=\"{ active: currentView === 'list' }\" @click=\"handleRunningStreamsClick\">Running Streams</li>\r\n          <li :class=\"{ active: currentView === 'cleanup' }\" @click=\"currentView = 'cleanup'\">Cleanup</li>\r\n        </ul>\r\n      </aside>\r\n\r\n      <!-- Main Content -->\r\n      <main class=\"content\">\r\n        <!-- Start Stream -->\r\n        <div v-if=\"currentView === 'start'\">\r\n          <h2>Start a Stream</h2>\r\n          <div class=\"form-group channel-name-container\">\r\n            <label>Channel Name:</label>\r\n            <div class=\"channel-input-avatar\">\r\n              <input v-model=\"startData.name\" placeholder=\"Enter Channel Name\" />\r\n              <StyledButton :clickHandler=\"fetchLiveStatus\" class=\"small-button\">Check Live Status</StyledButton>\r\n              <div class=\"avatar-container\">\r\n                <div v-if=\"!avatarUrl\">\r\n                  <!-- Embedded SVG as fallback when no avatar is loaded -->\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"#4d4d4d\" />\r\n                  </svg>\r\n                </div>\r\n              <div v-else>\r\n                <!-- Show the profile image when available -->\r\n                <img :src=\"avatarUrl\" alt=\"Profile Image\" class=\"profile-image-small\" />\r\n                <div class=\"status-indicator\" :class=\"{ 'status-online': isUserLive, 'status-offline': !isUserLive }\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            <div class=\"form-group\">\r\n              <label>Quality:</label>\r\n              <select v-model=\"startData.quality\">\r\n                <option value=\"audio_only\">Audio Only</option>\r\n                <option value=\"best\">Best</option>\r\n                <option value=\"720p\">720p</option>\r\n                <option value=\"480p\">480p</option>\r\n                <option value=\"360p\">360p</option>\r\n                <option value=\"160p\">160p</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Filename:</label>\r\n              <input type=\"checkbox\" v-model=\"startData.append_time\" />\r\n              Append datetime to filename\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input type=\"checkbox\" v-model=\"startData.block_ads\" />\r\n              Block ads\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input type=\"checkbox\" v-model=\"startData.schedule\" />\r\n              Schedule\r\n            </div>\r\n            <StyledButton :clickHandler=\"startStream\">Start</StyledButton>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- Running Streams -->\r\n        <div v-if=\"currentView === 'list'\">\r\n          <h2>Running Streams</h2>\r\n          <StyledButton :clickHandler=\"fetchRunningStreams\" class=\"refresh-btn\">Refresh</StyledButton>\r\n          <div v-if=\"streamsLoading\">Loading streams...</div>\r\n          <div v-else>\r\n            <div class=\"streams-container\">\r\n              <div v-for=\"stream in detailedStreams\" :key=\"stream.stream_id\" class=\"stream-box\">\r\n                <div class=\"scheduled-icon-container invisible\">\r\n                  <i class=\"fas fa-hourglass-half scheduled-icon\"></i>\r\n                </div>\r\n                <div class=\"stream-info\">\r\n                  <h3>\r\n                    <a :href=\"stream.url\" target=\"_blank\">{{ stream.name }}</a>\r\n                  </h3>\r\n                  <p><strong>Stream ID:</strong> {{ stream.stream_id }}</p>\r\n                  <p><strong>Quality:</strong> {{ stream.quality }}</p>\r\n                  <p><strong>Running Since:</strong> {{ formatRunningTime(stream.running_since) }}</p>\r\n                  <p><strong>Filename:</strong> {{ stream.filename }}</p>\r\n                  <p><strong>Output Directory:</strong> {{ stream.output_dir }}</p>\r\n                  <p><strong>Block Ads:</strong> {{ stream.block_ads ? \"Yes\" : \"No\" }}</p>\r\n                  <p><strong>Status:</strong> {{ stream.running ? \"Running\" : \"Stopped\" }}</p>\r\n                </div>\r\n                <div class=\"profile-image-container\">\r\n                  <a :href=\"stream.url\" target=\"_blank\">\r\n                    <img :src=\"stream.profile_image_url\" alt=\"Profile Image\" class=\"profile-image\" />\r\n                  </a>\r\n                </div>\r\n                <button @click=\"terminateStream(stream.stream_id)\" class=\"terminate-btn\" title=\"Terminate\">\r\n                  <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n              <div v-for=\"stream in scheduledStreams\" :key=\"stream.stream_id\" class=\"stream-box\">\r\n                <div class=\"scheduled-icon-container\">\r\n                  <i class=\"fas fa-hourglass-half scheduled-icon\"></i>\r\n                </div>\r\n                <div class=\"stream-info\">\r\n                  <h3>\r\n                    <a :href=\"stream.url\" target=\"_blank\">{{ stream.name }}</a>\r\n                  </h3>\r\n                  <p><strong>Stream ID:</strong> {{ stream.stream_id }}</p>\r\n                  <p><strong>Quality:</strong> {{ stream.quality }}</p>\r\n                  <p><strong>Scheduled:</strong> Yes</p>\r\n                  <p><strong>Filename:</strong> {{ stream.filename }}</p>\r\n                  <p><strong>Output Directory:</strong> {{ stream.output_dir }}</p>\r\n                  <p><strong>Block Ads:</strong> {{ stream.block_ads ? \"Yes\" : \"No\" }}</p>\r\n                  <p><strong>Status:</strong> {{ stream.running ? \"Running\" : \"Stopped\" }}</p>\r\n                </div>\r\n                <div class=\"profile-image-container\">\r\n                  <a :href=\"stream.url\" target=\"_blank\">\r\n                    <img :src=\"stream.profile_image_url\" alt=\"Profile Image\" class=\"profile-image\" />\r\n                  </a>\r\n                </div>\r\n                <button @click=\"terminateStream(stream.stream_id)\" class=\"terminate-btn\" title=\"Terminate\">\r\n                  <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button @click=\"confirmTerminateAllStreams\" class=\"terminate-all-btn\" title=\"Terminate All\">\r\n            <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Cleanup -->\r\n        <div v-if=\"currentView === 'cleanup'\">\r\n          <h2>Cleanup</h2>\r\n          <StyledButton :clickHandler=\"cleanup\">Cleanup DB and Logs</StyledButton>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport StyledButton from './StyledButton.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: { StyledButton },\r\n  data() {\r\n    return {\r\n      currentView: 'start', // Default view\r\n      startData: {\r\n        name: '',\r\n        quality: 'best',\r\n        block_ads: true,\r\n        append_time: true,\r\n        schedule: false,\r\n      },\r\n      liveStatusUsername: '', // Input for checking live status\r\n      avatarUrl: null, // URL of the user's avatar\r\n      isUserLive: false, // User live status\r\n      runningStreams: [], // Raw stream IDs from /api/stream_list\r\n      detailedStreams: [], // Detailed data from /api/stream_info\r\n      scheduledStreams: [], // Detailed data for scheduled streams\r\n      streamsLoading: false, // Loading state for the Running Streams view\r\n    };\r\n  },\r\n  methods: {\r\n    async startStream() {\r\n      const payload = {\r\n        name: this.startData.name || '',\r\n        quality: this.startData.quality || 'best',\r\n        block_ads: !!this.startData.block_ads,\r\n        append_time: !!this.startData.append_time, \r\n        schedule: !!this.startData.schedule,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('/api/start', payload);\r\n        alert(`Stream started: ${response.data.message}`);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Failed to start the stream.');\r\n      }\r\n    },\r\n\r\n    async fetchLiveStatus() {\r\n      if (!this.startData.name.trim()) {\r\n        alert('Please enter a username.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`/api/get_live_status?username=${this.startData.name}`);\r\n        const liveStatus = response.data.live_status;\r\n\r\n        if (liveStatus === 'live') {\r\n          this.isUserLive = true;\r\n        } else if (liveStatus === 'offline') {\r\n          this.isUserLive = false;\r\n        } else {\r\n          throw new Error('Unexpected response format.');\r\n        }\r\n\r\n        // Fetch avatar image (optional step if not included in live_status response)\r\n        const avatarResponse = await axios.get(`/api/get_avatar?username=${this.startData.name}`);\r\n        this.avatarUrl = avatarResponse.data.profile_image_url;\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching live status:', error);\r\n        alert('Failed to fetch live status or avatar.');\r\n      }\r\n    },\r\n\r\n    async terminateStream(stream_id) {\r\n      const confirmation = window.confirm('Are you sure you want to terminate this stream?');\r\n      if (confirmation) {\r\n        try {\r\n          const response = await axios.post(`/api/stop?stream_id=${stream_id}`);\r\n          alert(`Stream terminated: ${response.data.message}`);\r\n          this.fetchRunningStreams(); // Refresh the list after termination\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert('Failed to terminate the stream.');\r\n        }\r\n      }\r\n    },\r\n    async confirmTerminateAllStreams() {\r\n      const confirmation = window.confirm('Are you sure you want to terminate all streams?');\r\n      if (confirmation) {\r\n        this.terminateAllStreams();\r\n      }\r\n    },\r\n    async terminateAllStreams() {\r\n      try {\r\n        const response = await axios.post('/api/stop_all');\r\n        alert(`All streams terminated: ${response.data.message}`);\r\n        this.fetchRunningStreams(); // Refresh the list after termination\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Failed to terminate all streams.');\r\n      }\r\n    },\r\n    async fetchRunningStreams() {\r\n      this.streamsLoading = true; // Show loading state\r\n      try {\r\n        // Fetch the list of running and scheduled streams\r\n        const listResponse = await axios.get('/api/stream_list');\r\n        const runningStreamIds = listResponse.data.running_streams;\r\n        const scheduledStreamIds = listResponse.data.scheduled_streams;\r\n\r\n        // Fetch details for each running stream ID\r\n        const runningDetailsPromises = runningStreamIds.map((id) =>\r\n          axios.get(`/api/stream_info?stream_id=${id}`)\r\n        );\r\n\r\n        const runningDetailsResponses = await Promise.all(runningDetailsPromises);\r\n\r\n        // Extract detailed running stream information\r\n        this.detailedStreams = await Promise.all(\r\n          runningDetailsResponses.map(async (res) => {\r\n            const stream = res.data;\r\n            const avatarResponse = await axios.get(`/api/get_avatar?username=${stream.name}`);\r\n            stream.profile_image_url = avatarResponse.data.profile_image_url;\r\n            return stream;\r\n          })\r\n        );\r\n\r\n        // Fetch details for each scheduled stream ID\r\n        const scheduledDetailsPromises = scheduledStreamIds.map((id) =>\r\n          axios.get(`/api/stream_info?stream_id=${id}`)\r\n        );\r\n\r\n        const scheduledDetailsResponses = await Promise.all(scheduledDetailsPromises);\r\n\r\n        // Extract detailed scheduled stream information\r\n        this.scheduledStreams = await Promise.all(\r\n          scheduledDetailsResponses.map(async (res) => {\r\n            const stream = res.data;\r\n            const avatarResponse = await axios.get(`/api/get_avatar?username=${stream.name}`);\r\n            stream.profile_image_url = avatarResponse.data.profile_image_url;\r\n            return stream;\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Failed to fetch running streams.');\r\n      } finally {\r\n        this.streamsLoading = false; // Hide loading state\r\n      }\r\n    },\r\n    handleRunningStreamsClick() {\r\n      this.currentView = 'list';\r\n      this.fetchRunningStreams();\r\n    },\r\n    async cleanup() {\r\n      try {\r\n        const response = await axios.get('/api/cleanup');\r\n        alert(response.data.result);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Cleanup failed.');\r\n      }\r\n    },\r\n    formatRunningTime(minutes) {\r\n      const totalSeconds = minutes * 60;\r\n      const hours = Math.floor(minutes / 60);\r\n      const remainingMinutes = Math.floor(minutes % 60);\r\n      const remainingSeconds = Math.round(totalSeconds % 60);\r\n\r\n      if (hours > 0) {\r\n        return `${hours}h ${remainingMinutes}m ${remainingSeconds}s`;\r\n      } else {\r\n        return `${remainingMinutes}m ${remainingSeconds}s`;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Colors */\r\n:root {\r\n  --twitch-purple: #9146ff;\r\n  --dark-grey: #2d2d2d;\r\n  --light-grey: #393939;\r\n  --white: #ffffff;\r\n  --hover-grey: #4d4d4d;\r\n  --dark-background: #212121;\r\n  --font-color: #ababab;\r\n}\r\n\r\nbody {\r\n  background-color: var(--dark-background);\r\n}\r\n\r\n/* Overall Layout */\r\n.container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.sidebar {\r\n  background-color: var(--dark-grey);\r\n  color: var(--white);\r\n  padding: 15px;\r\n  width: 200px;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: var(--hover-grey);\r\n}\r\n\r\n.sidebar li.active {\r\n  background-color: var(--twitch-purple);\r\n  color: var(--white);\r\n}\r\n\r\n.content {\r\n  background-color: var(--light-grey);\r\n  color: var(--font-color);\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 40px); \r\n}\r\n\r\n/* Form Styles */\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput,\r\nselect {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  background-color: #333;\r\n  border: none;\r\n  color: var(--font-color);\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Stream Boxes */\r\n.stream-box {\r\n  background-color: var(--dark-grey);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center; \r\n  gap: 20px;\r\n  background-color: #333;\r\n  position: relative;\r\n}\r\n\r\n.stream-box .stream-info {\r\n  flex-grow: 1;\r\n}\r\n\r\n.stream-box h3 {\r\n  margin-top: 0;\r\n}\r\n\r\n.stream-box p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.stream-box .profile-image-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 150px;\r\n}\r\n\r\n.stream-box img.profile-image {\r\n  width: 140px;\r\n  height: 140px;\r\n  border-radius: 50%;\r\n  margin-right: 10vw;\r\n  transition: transform 0.2s ease-in-out; \r\n}\r\n\r\n.stream-box img.profile-image:hover {\r\n  transform: scale(1.1); \r\n}\r\n\r\n.stream-box .scheduled-icon-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 10vw;\r\n}\r\n\r\n.stream-box .scheduled-icon {\r\n  font-size: 2.5vw;\r\n  color: var(--twitch-purple);\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.stream-box .scheduled-icon:hover {\r\n  transform: scale(1.1); \r\n}\r\n\r\n.stream-box .scheduled-icon-container.invisible {\r\n  visibility: hidden;\r\n}\r\n\r\n.streams-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\r\n  gap: 20px;\r\n  flex-grow: 1; \r\n  overflow-y: auto; \r\n  max-height: calc(100vh - 140px); \r\n}\r\n\r\nbutton {\r\n  width: auto;\r\n  padding: 8px 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton i {\r\n  font-size: 18px;\r\n}\r\n\r\n/* Button Styles */\r\n.terminate-btn {\r\n  background-color: transparent;\r\n  color: #d9534f;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.terminate-btn:hover {\r\n  color: red;\r\n}\r\n\r\n.terminate-btn:hover::after {\r\n  position: absolute;\r\n  top: -25px;\r\n  right: 0;\r\n  background-color: var(--dark-grey);\r\n  color: var(--white);\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n}\r\n/* Terminate All Button */\r\n.terminate-all-btn {\r\n  background-color: #d9534f;\r\n  color: var(--white);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: auto;\r\n  transition: background-color 0.3s ease;\r\n  position: fixed;\r\n  bottom: 10px;\r\n  right: 10px;\r\n}\r\n\r\n.terminate-all-btn:hover {\r\n  background-color: red;\r\n}\r\n\r\n/* Smaller Button */\r\n.small-button {\r\n  width: 10vw;\r\n}\r\n\r\n/* Avatar Container */\r\n.avatar-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.avatar-container svg {\r\n  width: 10vw;\r\n  height: 10vw;\r\n}\r\n\r\n.profile-image-small {\r\n  width: 10vw; \r\n  height: 10vw;\r\n  border-radius: 50%;\r\n  border: 2px solid var(--white);\r\n}\r\n\r\n/* Status Indicator */\r\n.status-indicator {\r\n  width: 1vw;\r\n  height: 1vw;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  border: 2px solid var(--dark-grey);\r\n  border-radius: 50%;\r\n}\r\n\r\n.status-online {\r\n  background-color: #4caf50;\r\n}\r\n\r\n.status-offline {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.channel-name-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.channel-input-avatar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.channel-input-avatar input {\r\n  flex: 1;\r\n  width: auto;\r\n  max-width: 60vw; \r\n}\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}